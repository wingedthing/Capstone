"""
messages.py's Message class is to be used by processes that are responsible for collecting raw sensor data.
 
The initial Message.payload dictionary structure defined here is serialized and deserialized
as it is passed through the various layers of the application. 
Layers may add key value pairs, but they should not remove any keys. As other layers may require them and 
enables better logging of results.    
"""

class Message():
    """
    Represents the state of a single paired data reading from a cohort of senors as well as various transformations
    to that data to turn it into location data.  
    """
    def __init__(self, l_mac:str, r_mac:str):
        self.flag = 0
        self.payload = {
            "start_time": 0.0,
            "LW_dis": 0.0,
            "RW_dis": 0.0,
            "LW_total": 0.0,
            "RW_total": 0.0,
            "unix_timestamp": 0.0,
            "x_loc": 0.0,
            "y_loc": 0.0,
            "heading": 0.0,
            "LSensor": {
                "accX": 0.0,
                "accY": 0.0,
                "accZ": 0.0,
                "gyroX": 0.0,
                "gyroY": 0.0,
                "gyroZ": 0.0,
                "timestamp": 0.0,
                "mac": l_mac
            },
            "RSensor": {
                "accX": 0.0,
                "accY": 0.0,
                "accZ": 0.0,
                "gyroX": 0.0,
                "gyroY": 0.0,
                "gyroZ": 0.0,
                "timestamp": 0.0,
                "mac": r_mac
            },
            "reset": False
        }
        
    def update(self, key:str, value):
        self.payload[key] = value
        
    def update_sensor_data(self, sensor:str, data:list, timestamp:float):
        """Updates the specified sensor dictionary with live data

        Args:
            sensor (str): Name of the sensor data in the JSON message: LSensor | RSensor.\n
            data (list): Data generated by sensors.\n
            timestamp (float): Time data was generated.
        """
        self.payload[sensor]["accX"] = data[0].x
        self.payload[sensor]["accY"] = data[0].y
        self.payload[sensor]["accZ"] = data[0].z
        self.payload[sensor]["gyroX"] = data[1].x
        self.payload[sensor]["gyroY"] = data[1].y
        self.payload[sensor]["gyroZ"] = data[1].z
        self.payload[sensor]["timestamp"] = timestamp     
